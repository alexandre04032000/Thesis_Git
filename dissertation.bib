@book{KeR88
  , author    =	{B.W. Kernighan and D.M. Ritchie}
  , title     =	{The C Programming Language (ANSI C)}
  , edition   =	{2nd}
  , publisher =	{Prentice Hall Software series}
  , year      =	{1988}
  , keywords  = {Programming, Imperative}
}
@book{BW88
  , noAUTHOR = "Richard Bird and Philip Wadler"
  , author    = "R. Bird and P. Wadler"
  , TITLE = "Introduction to Functional Programming"
  , publisher = "Prentice-Hall"
  , YEAR = "1988"
  , keywords  = {Programming, Functional}
}
@book{GRM97
  , title     = {The LaTeX Graphics Companion}
  , author    = {Michel Goossens and Sebastian Rahtz and Frank Mittelbach}
  , publisher = {Addison-Wesley}
  , year      = {1997}
  , note      = {ISBN 0-201-85469-4}
  , keywords  = {LaTeX, Programming, Graphics}
}
@book{Fl99
  , title     =   {Java in a Nutshell}
  , author=   {D. Flanagan}
  , publisher =   {O'Reilly \& Associates}
  , edition=  {3rd}
  , year  =   {1999}
  , keywords  = {Java, Programming, OO}
}
@book{La86
  , KEY = "La86"
  , AUTHOR = "L. Lamport"
  , TITLE = "\LaTeX\ --- A Document Preparation System"
  , PUBLISHER = "Addison-Wesley Publishing Company"
  , EDITION = "\nth5"
  , YEAR = "1986"
  , keywords  = {LaTeX}
}

@inproceedings{DBLP:conf/nfm/ArcileA22,
  author       = {Johan Arcile and
                  {\'{E}}tienne Andr{\'{e}}},
  editor       = {Jyotirmoy V. Deshmukh and
                  Klaus Havelund and
                  Ivan Perez},
  title        = {Zone Extrapolations in Parametric Timed Automata},
  booktitle    = {{NASA} Formal Methods - 14th International Symposium, {NFM} 2022,
                  Pasadena, CA, USA, May 24-27, 2022, Proceedings},
  series       = {Lecture Notes in Computer Science},
  volume       = {13260},
  pages        = {451--469},
  publisher    = {Springer},
  year         = {2022},
  url          = {https://doi.org/10.1007/978-3-031-06773-0\_24},
  doi          = {10.1007/978-3-031-06773-0\_24},
  timestamp    = {Thu, 02 Jun 2022 16:43:24 +0200},
  biburl       = {https://dblp.org/rec/conf/nfm/ArcileA22.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@article{Tsvilii2021,
   author = {Olena Tsvilii},
   doi = {10.15587/2706-5448.2021.225271},
   issn = {2664-9969},
   issue = {2(57)},
   journal = {Technology Audit and Production Reserves},
   pages = {54-60},
   title = {Cybersecurity regulation: cybersecurity certification of operational technologies},
   volume = {1},
   url = {https://doaj.org/article/189eb29f0d5a4eae9f67e3475f64712d},
   year = {2021},
}
@article{Mascetti2018,
   abstract = {Cybersecurity Systems (CSSs) play a fundamental role in guaranteeing data confidentiality, integrity, and availability. However, while processing data, CSSs can intentionally or unintentionally expose personal information to people that can misuse them. For this reason, privacy implications of a CSS should be carefully evaluated. This is a challenging task mainly because modern CSSs have complex architectures and components. Moreover, data processed by CSSs can be exposed to different actors, both internal and external to the organization. This contribution presents a methodology, called EPIC, that is specifically designed to evaluate privacy violation risks in cybersecurity systems. Differently, from other general purpose guidelines, EPIC is an operational methodology aimed at guiding security and privacy experts with step-by-step instructions from modeling data exposure in the CSS to the systematical identification of privacy threats and evaluation of their associated privacy violation risk. This contribution also shows the application of the EPIC methodology to the use case of a large academic organization CSS protecting over 15, 000 hosts.},
   author = {Sergio Mascetti and Nadia Metoui and Andrea Lanzi and Claudio Bettini},
   issn = {20131631},
   issue = {3},
   journal = {Transactions on Data Privacy},
   keywords = {Cybersecurity System,Privacy impact assessment,Privacy violation risk},
   pages = {239-277},
   title = {EPIC: A methodology for evaluating privacy violation risk in cybersecurity systems},
   volume = {11},
   year = {2018},
}
@article{Schneidewind2010,
   author = {N Schneidewind},
   doi = {10.1109/MIC.2010.14},
   issn = {1089-7801},
   issue = {1},
   journal = {IEEE Internet Computing, Internet Computing, IEEE, IEEE Internet Comput.},
   pages = {64},
   title = {Metrics for mitigating cybersecurity threats to networks},
   volume = {14},
   url = {https://search.ebscohost.com/login.aspx?direct=true&db=edseee&AN=edseee.5370821&site=eds-live},
   year = {2010},
}
@article{Craigen2014,
   abstract = {Cybersecurity is a broadly used term, whose definitions are highly variable, often subject- ive, and at times, uninformative. The absence of a concise, broadly acceptable definition that captures the multidimensionality of cybersecurity impedes technological and scientific advances by reinforcing the predominantly technical view of cybersecurity while separating disciplines that should be acting in concert to resolve complex cybersecurity challenges. In conjunction with an in-depth literature review, we led multiple discussions on cybersecur- ity with a diverse group of practitioners, academics, and graduate students to examine mul- tiple perspectives of what should be included in a definition of cybersecurity. In this article, we propose a resulting new definition: "Cybersecurity is the organization and collection of resources, processes, and structures used to protect cyberspace and cyberspace-enabled systems from occurrences that misalign de jure from de facto property rights." Articulating a concise, inclusive, meaningful, and unifying definition will enable an enhanced and en- riched focus on interdisciplinary cybersecurity dialectics and thereby will influence the ap- proaches of academia, industry, and government and non-governmental organizations to cybersecurity challenges.},
   author = {Dan Craigen and Nadia Diakun-Thibault and Randy Purse},
   doi = {10.22215/timreview835},
   issue = {10},
   journal = {Technology Innovation Management Review},
   pages = {13-21},
   title = {Defining Cybersecurity},
   volume = {4},
   year = {2014},
}
@book{Baier2008,
   abstract = {Model checking systematically (and automatically) checks whether a model of a given system satisfies a desired property such as deadlock freedom, invariants, and request-response properties. This text offers an introduction to this verification and debugging technique. System verification -- Modelling concurrent systems -- Linear-time properties -- Regular properties -- Linear temporal logic -- Computation tree logic -- Equivalences and abstraction -- Partial order reduction -- Timed automata -- Probabilistic systems.},
   author = {Christel. Baier and Joost-Pieter. Katoen},
   isbn = {9780262026499},
   pages = {975},
   publisher = {MIT Press},
   title = {Principles of model checking},
   year = {2008},
}
@inproceedings{uppex,
  author       = {Jos{\'{e}} Proen{\c{c}}a and
                  David Pereira and
                  Giann Spilere Nandi and
                  Sina Borrami and
                  Jonas Melchert},
  editor       = {Maurice H. ter Beek and
                  Clemens Dubslaff},
  title        = {Spreadsheet-based Configuration of Families of Real-Time Specifications},
  booktitle    = {Proceedings of the First Workshop on Trends in Configurable Systems
                  Analysis, TiCSA@ETAPS 2023, Paris, France, 23rd April 2023},
  series       = {{EPTCS}},
  volume       = {392},
  pages        = {27--39},
  year         = {2023},
  url          = {https://doi.org/10.4204/EPTCS.392.2},
  doi          = {10.4204/EPTCS.392.2},
}

@inproceedings{uppex-railway,
 author = {José Proença and
Sina Borrami and
Jorge Sanchez de Nova and
David Pereira and
Giann Spilere Nandi},
 bibsource = {dblp computer science bibliography, https://dblp.org},
 biburl = {https://dblp.org/rec/conf/rssrail/ProencaBNPN22.bib},
 booktitle = {Reliability, Safety, and Security of Railway Systems. Modelling, Analysis,
Verification, and Certification - 4th International Conference, RSSRail
2022, Paris, France, June 1-2, 2022, Proceedings},
 doi = {10.1007/978-3-031-05814-1\_6},
 editor = {Simon Collart Dutilleul and
Anne E. Haxthausen and
Thierry Lecomte},
 pages = {83--94},
 publisher = {Springer},
 series = {Lecture Notes in Computer Science},
 timestamp = {Mon, 23 May 2022 16:36:24 +0200},
 title = {Verification of Multiple Models of a Safety-Critical Motor Controller
in Railway Systems},
 url = {https://doi.org/10.1007/978-3-031-05814-1\_6},
 volume = {13294},
 year = {2022}
}



@article{Abate2021,
   abstract = {We provide a survey of the state of the art of rational verification: the problem of checking whether a given temporal logic formula ϕ is satisfied in some or all game-theoretic equilibria of a multi-agent system – that is, whether the system will exhibit the behavior ϕ represents under the assumption that agents within the system act rationally in pursuit of their preferences. After motivating and introducing the overall framework of rational verification, we discuss key results obtained in the past few years as well as relevant related work in logic, AI, and computer science.},
   author = {Alessandro Abate and Julian Gutierrez and Lewis Hammond and Paul Harrenstein and Marta Kwiatkowska and Muhammad Najib and Giuseppe Perelli and Thomas Steeples and Michael Wooldridge},
   doi = {10.1007/s10489-021-02658-y},
   issn = {15737497},
   issue = {9},
   journal = {Applied Intelligence},
   keywords = {Automated synthesis,Automated verification,Game theory,Model checking,Multi-agent systems},
   month = {9},
   pages = {6569-6584},
   publisher = {Springer},
   title = {Rational verification: game-theoretic verification of multi-agent systems},
   volume = {51},
   year = {2021},
}

@article{spin,
   author = {Bernhard Beckert and Mattias Ulbrich},
   title = {Applications of Formal Verification Model Checking: Introduction to SPIN},
   year = {2021},
   note = {KIT– INSTITUT F¨UR THEORETISCHE INFORMATIK}
}

@article{prism,
   abstract = {In this paper we introduce PRISM, a probabilistic model checker, and describe the efficient symbolic techniques we have developed during its implementation. PRISM is a tool for analysing proba-bilistic systems. It supports three models: discrete-time Markov chains, continuous-time Markov chains and Markov decision processes. Analysis is performed through model checking specifications in the probabilis-tic temporal logics PCTL and CSL. Motivated by the success of model checkers such as SMV, which use BDDs (binary decision diagrams), we have developed an implementation of PCTL and CSL model checking based on MTBDDs (multi-terminal BDDs) and BDDs. Existing work in this direction has been hindered by the generally poor performance of MTBDD-based numerical computation, which is often substantially slower than explicit methods using sparse matrices. We present a novel hybrid technique which combines aspects of symbolic and explicit approaches to overcome these performance problems. For typical examples, we achieve orders of magnitude speed-up compared to MTBDDs and are able to almost match the speed of sparse matrices whilst maintaining considerable space savings.},
   author = {Marta Kwiatkowska and Gethin Norman and David Parker},
   title = {Probabilistic Symbolic Model Checking with PRISM: A Hybrid Approach},
}

@article{Peled2001,
   abstract = {Model checking is an effective way of comparing a system description against its formal specification and search systematically for errors. The method is gaining a lot of success by being integrated in the hardware design process, and in development of complicated protocols and software. Being an intractable problem, model checking is the ground for very active research that is inspired by many different areas in computer science.},
   author = {Doron Peled},
   title = {Model Checking},
   url = {https://www.researchgate.net/publication/220689159},
   year = {2001},
}

@article{Haque2022,
   abstract = {Source code summarization involves creating brief descriptions of source code in natural language. These descriptions are a key component of software documentation such as JavaDocs. Automatic code summarization is a prized target of software engineering research, due to the high value summaries have to programmers and the simultaneously high cost of writing and maintaining documentation by hand. Current work is almost all based on machine models trained via big data input. Large datasets of examples of code and summaries of that code are used to train an e.g. encoder-decoder neural model. Then the output predictions of the model are evaluated against a set of reference summaries. The input is code not seen by the model, and the prediction is compared to a reference. The means by which a prediction is compared to a reference is essentially word overlap, calculated via a metric such as BLEU or ROUGE. The problem with using word overlap is that not all words in a sentence have the same importance, and many words have synonyms. The result is that calculated similarity may not match the perceived similarity by human readers. In this paper, we conduct an experiment to measure the degree to which various word overlap metrics correlate to human-rated similarity of predicted and reference summaries. We evaluate alternatives based on current work in semantic similarity metrics and propose recommendations for evaluation of source code summarization.},
   author = {Sakib Haque and Zachary Eberhart and Aakash Bansal and Collin McMillan},
   doi = {10.1145/nnnnnnn.nnnnnnn},
   isbn = {9781450392983},
   journal = {IEEE International Conference on Program Comprehension},
   keywords = {automatic documentation generation,evaluation metrics,source code summarization},
   pages = {36-47},
   publisher = {IEEE Computer Society},
   title = {Semantic Similarity Metrics for Evaluating Source Code Summarization},
   volume = {2022-March},
   year = {2022},
}

@book{Chakraborty2011,
   abstract = {Title from The ACM Digital Library.},
   author = {Samarjit. Chakraborty and ACM Digital Library. and ACM Special Interest Group on Design Automation. and Association for Computing Machinery. Special Interest Group on Embedded Systems. and ACM Special Interest Group on Microarchitectural Research and Processing.},
   isbn = {9781450307147},
   pages = {354},
   publisher = {ACM},
   title = {Proceedings of the ninth ACM international conference on Embedded software.},
   year = {2011},
}

@article{Behrmann2006,
   abstract = {This is a tutorial paper on the tool Uppaal. Its goal is to be a short introduction on the flavour of timed automata implemented in the tool, to present its interface, and to explain how to use the tool. The contribution of the paper is to provide reference examples and modelling patterns.},
   author = {Gerd Behrmann and Alexandre David and Kim G Larsen},
   title = {A Tutorial on Uppaal 4.0},
   url = {http://www.uppaal.com/.},
   year = {2006},
}

@misc{upp,
  author = {Julián Proenza},
  year = {2008},
  title = {The UPPAAL Model Checker},
  note = {[PowerPoint Slides]},
  howpublished = {Microsoft PowerPoint},
  url ={https://fuuu.be/polytech/INFOF410/infof410_goat/doc/TheUppaalModelCheckerNEW.pdf},
  urldate = {2025-03-04}
}

@misc{IMITATOR,
   title = {IMITATOR User Manual},
   url = {www.imitator.fr},
   note = {Accessed 2024-01-13},
   year = {2022},
}

@misc{para,
   abstract = {Traditional approaches to the algorithmic verification of real-time systems are limited to checking program cor-rectness with respect to concrete timing properties (e.g., "message delivery wit hin 10 milliseconds"). We address the more realistic and more ambitious problem of deriving symbolic constraints on the timing properties required of real-time systems (e.g., "message delivery within the time it takes to execute two assignment statements"). To model this problem, we introduce parametric timed automata-finite-state machines whose transitions are constrained with parametric timing requirements. The emptiness question for parametric timed automata is central to the verification problem. On the negative side, we show that in general this question is undecidable. On the positive side, we provide algorithms for checking the emptiness of restricted classes of parametric timed au-tomata. The practical relevance of these classes is illustrated with several verification examples. There remains a gap between the automata classes for which we know that emptiness is decidable and undecidable, respectively, and this gap is related to various hard and open problems of logic and automata theory.},
   author = {Rajeev Alur and Thomas A Henzinger and Moshe Y Vardi},
   title = {Parametric Real-time Reasoning},
}



@inproceedings{spl,
  title={Different Approaches used in Software Product Families},
  author={Rafia Inam},
  year={2010},
  url={https://api.semanticscholar.org/CorpusID:55926374},
}



@misc{spl2,
   abstract = {Software product lines can be implemented with many different approaches. However, there are common underlying mechanisms which allow a classification into compositional and annotative approaches. While research focuses mainly on composition approaches like aspect-or feature-oriented programming because those support feature traceability and modularity, in practice annotative approaches like preprocessors are common as they are easier to adopt. In this paper, we compare both groups of approaches and find complementary strengths. We propose an integration of compositional and annotative approaches to combine advantages, increase flexibility for the developer, and ease adoption.},
   author = {Christian Kästner and Sven Apel},
   title = {Integrating Compositional and Annotative Approaches for Product Line Engineering},
}

@inbook{Pohl2018,
   abstract = {Software product lines have proven to empower industry to develop a diversity of similar software-intensive systems at lower cost, in shorter time, and with higher quality when compared with the development of single systems. In this chapter, we describe the key differences between software product line engineering and the development of single software systems: the two complementary development processes and the explicitly managed product line variability. Looking ahead, we sketch some applications of the product line variability modeling principles and techniques in non-SPLE settings.},
   author = {Klaus Pohl and Andreas Metzger},
   doi = {10.1007/978-3-319-73897-0_11},
   journal = {The Essence of Software Engineering},
   pages = {185-201},
   publisher = {Springer International Publishing},
   title = {Software Product Lines},
   year = {2018},
}



@inproceedings{citacao3,
author = {Andr\'{e}, \'{E}tienne},
title = {IMITATOR 3: Synthesis of Timing Parameters Beyond Decidability},
year = {2021},
isbn = {978-3-030-81684-1},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-030-81685-8_26},
doi = {10.1007/978-3-030-81685-8_26},
abstract = {Real-time systems are notoriously hard to verify due to nondeterminism, concurrency and timing constraints. When timing constants are uncertain (in early the design phase, or due to slight variations of the timing bounds), timed model checking techniques may not be satisfactory. In contrast, parametric timed model checking synthesizes timing values ensuring correctness. IMITATOR takes as input an extension of parametric timed automata (PTAs), a powerful formalism to formally verify critical real-time systems. IMITATOR extends PTAs with multi-rate clocks, global rational-valued variables and a set of additional useful features. We describe here the new features and algorithms offered by IMITATOR 3, that moved along the years from a simple prototype dedicated to robustness analysis to a standalone parametric model checker for timed systems.},
booktitle = {Computer Aided Verification: 33rd International Conference, CAV 2021, Virtual Event, July 20–23, 2021, Proceedings, Part I},
pages = {552–565},
numpages = {14},
keywords = {Parameter synthesis, Parametric timed automata, Real-time systems}
}


@article{citacao6,
author = {David, Alexandre and Larsen, Kim and Legay, Axel and Mikučionis, Marius and Poulsen, Danny},
year = {2015},
month = {01},
pages = {},
title = {Uppaal SMC tutorial},
volume = {17},
journal = {International Journal on Software Tools for Technology Transfer},
doi = {10.1007/s10009-014-0361-y}
}

@inproceedings{proenca-spreadsheet-2023,
  author       = {Jos{\'{e}} Proen{\c{c}}a and
                  David Pereira and
                  Giann Spilere Nandi and
                  Sina Borrami and
                  Jonas Melchert},
  editor       = {Maurice H. ter Beek and
                  Clemens Dubslaff},
  title        = {Spreadsheet-based Configuration of Families of Real-Time Specifications},
  booktitle    = {Proceedings of the First Workshop on Trends in Configurable Systems
                  Analysis, TiCSA@ETAPS 2023, Paris, France, 23rd April 2023},
  series       = {{EPTCS}},
  volume       = {392},
  pages        = {27--39},
  year         = {2023},
  url          = {https://doi.org/10.4204/EPTCS.392.2},
  doi          = {10.4204/EPTCS.392.2},
}

@article{SPL,
  author = {Luthmann, Lars and Gerecht, Timo and Lochau, Malte},
  year = {2019},
  title = {Sampling strategies for product lines with unbounded parametric real-time constraints},
  journal = {International Journal on Software Tools for Technology Transfer},
  volume = {21},
  number = {6},
  pages = {613--633},
  doi = {10.1007/s10009-019-00532-4}
}

@article{RealTimeSystems,
  author = {Sun, Youcheng and André, Étienne and Lipari, Giuseppe},
  year = {2016},
  title = {Verification of Two Real-Time Systems Using Parametric Timed Automata},
  doi = {https://www.loria.science/andre/documents/verification-of-two-real-time-systems-using-parametric-timed-automata.pdf}
}

@InProceedings{Andre2021,
  author    = {Étienne André},
  editor    = {Alexandra Silva and K. Rustan M. Leino},
  title     = {IMITATOR 3: Synthesis of Timing Parameters Beyond Decidability},
  booktitle = {Computer Aided Verification},
  year      = {2021},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {552--565},
  doi       = {10.1007/978-3-030-81685-8_26},
  isbn      = {978-3-030-81685-8},
  abstract  = {Real-time systems are notoriously hard to verify due to nondeterminism, concurrency and timing constraints. When timing constants are uncertain (in early the design phase, or due to slight variations of the timing bounds), timed model checking techniques may not be satisfactory. In contrast, parametric timed model checking synthesizes timing values ensuring correctness. IMITATOR takes as input an extension of parametric timed automata (PTAs), a powerful formalism to formally verify critical real-time systems. IMITATOR extends PTAs with multi-rate clocks, global rational-valued variables and a set of additional useful features. We describe here the new features and algorithms offered by IMITATOR 3, that moved along the years from a simple prototype dedicated to robustness analysis to a standalone parametric model checker for timed systems.}
}

@inproceedings{baukus2002power,
  author    = {Baukus, J. and Kwiatkowska, M.},
  title     = {On the Power Set of Clock Constraints in Timed Automata},
  booktitle = {Proceedings of the 14th International Conference on Concurrency Theory (CONCUR 2002)},
  pages     = {348--362},
  publisher = {Springer},
  year      = {2002}
}

@misc{proenca_slides,
  author = {Proença, José and Neves, Renato},
  year = {2022},
  title = {Real-time models: Timed Automata},
  note = {[PowerPoint Slides]},
  howpublished = {Microsoft PowerPoint},
  url = {https://lmf.di.uminho.pt/CyPhyComp2223/slides/3-timed-automata.pdf},
  urldate = {2025-03-04}
}

@misc{imitator_slides,
  author = {Étienne, André},
  year = {2021},
  title = {Imitator3 : Synthesis of timing parameters beyond decidability},
  note = {[PowerPoint Slides]},
  howpublished = {Microsoft PowerPoint},
  url = {https://lipn.univ-paris13.fr/~andre/documents/slides-2021-07-CAV-long.pdf},
  urldate = {2025-03-18}
}

@misc{techtarget_parser,
  author       = {TechTarget},
  title        = {Parser},
  year         = {2025},
  url          = {https://www.techtarget.com/searchapparchitecture/definition/parser},
  note         = {Accessed: 2025-03-21}
}

@article{andrePTA,
  author = {É. André and Didier Lime and Olivier H. Roux},
  title = {Reachability and Liveness in Parametric Timed Automata},
  journal = {Logical Methods in Computer Science},
  volume = {18},
  number = {1},
  pages = {31:1--31:41},
  year = {2022},
  doi = {10.46298/LMCS-18(1:31)2022},
  url = {https://lmcs.episciences.org/9070/pdf}
}

@article{proenca_uppex,
  author = {José Proença and Sina Borrami and Jorge Sanchez de Nova and David Pereira and Giann Nandi},
  title = {Verification of multiple models of a safetycritical motor controller in railway systems},
  journal = {},
  year = {2022},
  doi = {},
  url ={http://www.cister.isep.ipp.pt/docs/verificattion_of_multiple_models_of_a_safety_critical_motor_controller_in_railway_systems/1865/view.pdf}
}

@article{problemas_nao_deci,
  author = {Etienne André},
  title = {What’s decidable about parametric timed
  automata?},
  journal = {},
  year = {2022},
  doi = {},
  url ={https://lipn.univ-paris13.fr/~andre/documents/what-s-decidable-about-parametric-timed-automata.pdf}
}

@article{observers,
  author = {Etienne André},
  title = {Observer Patterns for Real-Time Systems},
  year = {2013},
  journal = {},
  doi = {10.1109/ICECCS.2013.26},
  url ={https://www.loria.science/andre/documents/observer-patterns-for-real-time-systems.pdf}
}

@book{baier2008principles,
  title     = {Principles of Model Checking},
  author    = {Baier, Christel and Katoen, Joost-Pieter},
  year      = {2008},
  publisher = {MIT Press},
  address   = {Cambridge, MA}
}

@misc{lee2009timed,
  author       = {Lee, Insup},
  title        = {Timed Automata and TCTL},
  year         = {2009},
  howpublished = {\url{https://www.cis.upenn.edu/~lee/09cis480/lec-part-2-ta-tctl-zones-il.pdf}},
  note         = {Accessed: May 7, 2025}
}

@incollection{bengtsson2004timed,
  author       = {Johan Bengtsson and Wang Yi},
  title        = {Timed Automata: Semantics, Algorithms and Tools},
  booktitle    = {Lecture Notes on Concurrency and Petri Nets},
  editor       = {Wil van der Aalst and Eike Best},
  series       = {Lecture Notes in Computer Science},
  volume       = {3098},
  pages        = {87--124},
  publisher    = {Springer},
  year         = {2004},
  doi          = {10.1007/978-3-540-27755-2_3},
  url          = {https://uppaal.org/texts/by-lncs04.pdf},
  note         = {Accessed: May 7, 2025}
}

@article{andre2019whats,
  author       = {Étienne André},
  title        = {What's Decidable about Parametric Timed Automata?},
  journal      = {International Journal on Software Tools for Technology Transfer},
  volume       = {21},
  number       = {2},
  pages        = {203--219},
  year         = {2019},
  doi          = {10.1007/s10009-017-0467-0},
  url          = {https://lipn.univ-paris13.fr/~andre/documents/what-s-decidable-about-parametric-timed-automata.pdf},
  note         = {Accessed: May 7, 2025}
}

@misc{amisb2018atm,
  author       = {Amisb},
  title        = {ATM machine freehand drawing illustration on white background},
  year         = {2018},
  howpublished = {\url{https://www.123rf.com/photo_81879414_atm-machine-freehand-drawing-illustration-on-white-background.html}},
  note         = {Accessed: May 8, 2025}
}
